# Importing necessary libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split

# Load the data into a pandas dataframe
df = pd.read_csv('house_prices.csv')

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df[['sq_ft', 'bedrooms', 'location']], df['price'], test_size=0.2, random_state=42)

# Create a linear regression object and fit the model to the training data
model = LinearRegression()
model.fit(X_train, y_train)

# Use the trained model to make predictions on the test data
y_pred = model.predict(X_test)

# Evaluate the model using mean squared error and R-squared
print('Mean squared error: ', mean_squared_error(y_test, y_pred))
print('R-squared: ', r2_score(y_test, y_pred))

# Save the model to a file
filename = 'house_prices_model.pkl'
joblib.dump(model, filename)

# Load the model from the file
loaded_model = joblib.load(filename)

# Use the loaded model to make predictions on new data
new_data = np.array([[1500, 3, 'Downtown']])
new_pred = loaded_model.predict(new_data)
print('Predicted price: $', new_pred[0])
